name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0, patch, minor, major)'
        required: true
        default: 'patch'
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests and build
      run: |
        npm run lint
        npm run build
        
    - name: Bump version
      id: version
      run: |
        if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          NEW_VERSION="${{ github.event.inputs.version }}"
          npm version "$NEW_VERSION" --no-git-tag-version
        else
          NEW_VERSION=$(npm version "${{ github.event.inputs.version }}" --no-git-tag-version)
        fi
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "version_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
        
    - name: Update package files
      run: |
        # Ensure the version is consistent across files
        NEW_VERSION="${{ steps.version.outputs.new_version }}"
        npm pkg set version="$NEW_VERSION"
        
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation - you might want to use a tool like conventional-changelog
        echo "## What's Changed" > TEMP_CHANGELOG.md
        echo "" >> TEMP_CHANGELOG.md
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          echo "### Commits since $LAST_TAG:" >> TEMP_CHANGELOG.md
          git log --oneline --no-merges "$LAST_TAG"..HEAD >> TEMP_CHANGELOG.md
        else
          echo "### Initial release" >> TEMP_CHANGELOG.md
          echo "- Initial implementation of n8n-nodes-reminders" >> TEMP_CHANGELOG.md
          echo "- Support for macOS Reminders API" >> TEMP_CHANGELOG.md
          echo "- Traditional n8n node with full CRUD operations" >> TEMP_CHANGELOG.md
          echo "- AI tool node for agent workflows" >> TEMP_CHANGELOG.md
        fi
        
        echo "changelog_file=TEMP_CHANGELOG.md" >> $GITHUB_OUTPUT
        
    - name: Commit version bump
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
        git push origin ${{ github.ref_name }}
        
    - name: Create and push tag
      run: |
        git tag "${{ steps.version.outputs.version_tag }}"
        git push origin "${{ steps.version.outputs.version_tag }}"
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version_tag }}
        release_name: Release ${{ steps.version.outputs.version_tag }}
        body_path: ${{ steps.changelog.outputs.changelog_file }}
        draft: false
        prerelease: false

    - name: Clean up
      run: rm -f TEMP_CHANGELOG.md