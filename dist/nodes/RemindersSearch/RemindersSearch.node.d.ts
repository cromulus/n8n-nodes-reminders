import { IExecuteFunctions, INodeExecutionData, ILoadOptionsFunctions, INodeListSearchResult, INodeType, INodeTypeDescription } from 'n8n-workflow';
import { z } from 'zod';
export declare const inputSchema: z.ZodObject<{
    operation: z.ZodOptional<z.ZodDefault<z.ZodLiteral<"search">>>;
    query: z.ZodOptional<z.ZodString>;
    search: z.ZodOptional<z.ZodString>;
    text: z.ZodOptional<z.ZodString>;
    reminderId: z.ZodOptional<z.ZodString>;
    uuid: z.ZodOptional<z.ZodString>;
    reminderUUID: z.ZodOptional<z.ZodString>;
    lists: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    listNames: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    listUUIDs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    completed: z.ZodOptional<z.ZodDefault<z.ZodEnum<["all", "true", "false", "incomplete", "complete"]>>>;
    dueBefore: z.ZodOptional<z.ZodString>;
    dueAfter: z.ZodOptional<z.ZodString>;
    dueBy: z.ZodOptional<z.ZodString>;
    dueFrom: z.ZodOptional<z.ZodString>;
    modifiedAfter: z.ZodOptional<z.ZodString>;
    createdAfter: z.ZodOptional<z.ZodString>;
    hasNotes: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    hasDueDate: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    isSubtask: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    hasAttachedUrl: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    hasMailUrl: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    priority: z.ZodOptional<z.ZodEnum<["none", "low", "medium", "high"]>>;
    priorityMin: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    priorityMax: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    minPriority: z.ZodOptional<z.ZodNumber>;
    maxPriority: z.ZodOptional<z.ZodNumber>;
    sortBy: z.ZodOptional<z.ZodDefault<z.ZodEnum<["title", "dueDate", "creationDate", "lastModified", "priority", "list"]>>>;
    sortOrder: z.ZodOptional<z.ZodDefault<z.ZodEnum<["asc", "desc"]>>>;
    limit: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    count: z.ZodOptional<z.ZodNumber>;
    maxResults: z.ZodOptional<z.ZodNumber>;
    includeAIContext: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    limit?: number | undefined;
    completed?: "all" | "true" | "false" | "incomplete" | "complete" | undefined;
    uuid?: string | undefined;
    operation?: "search" | undefined;
    includeAIContext?: boolean | undefined;
    search?: string | undefined;
    query?: string | undefined;
    text?: string | undefined;
    reminderId?: string | undefined;
    reminderUUID?: string | undefined;
    lists?: string | string[] | undefined;
    listNames?: string | string[] | undefined;
    listUUIDs?: string | string[] | undefined;
    dueBefore?: string | undefined;
    dueAfter?: string | undefined;
    dueBy?: string | undefined;
    dueFrom?: string | undefined;
    modifiedAfter?: string | undefined;
    createdAfter?: string | undefined;
    hasNotes?: boolean | undefined;
    hasDueDate?: boolean | undefined;
    isSubtask?: boolean | undefined;
    hasAttachedUrl?: boolean | undefined;
    hasMailUrl?: boolean | undefined;
    priority?: "none" | "low" | "medium" | "high" | undefined;
    priorityMin?: number | undefined;
    priorityMax?: number | undefined;
    minPriority?: number | undefined;
    maxPriority?: number | undefined;
    sortBy?: "list" | "priority" | "title" | "dueDate" | "creationDate" | "lastModified" | undefined;
    sortOrder?: "asc" | "desc" | undefined;
    count?: number | undefined;
    maxResults?: number | undefined;
}, {
    limit?: number | undefined;
    completed?: "all" | "true" | "false" | "incomplete" | "complete" | undefined;
    uuid?: string | undefined;
    operation?: "search" | undefined;
    includeAIContext?: boolean | undefined;
    search?: string | undefined;
    query?: string | undefined;
    text?: string | undefined;
    reminderId?: string | undefined;
    reminderUUID?: string | undefined;
    lists?: string | string[] | undefined;
    listNames?: string | string[] | undefined;
    listUUIDs?: string | string[] | undefined;
    dueBefore?: string | undefined;
    dueAfter?: string | undefined;
    dueBy?: string | undefined;
    dueFrom?: string | undefined;
    modifiedAfter?: string | undefined;
    createdAfter?: string | undefined;
    hasNotes?: boolean | undefined;
    hasDueDate?: boolean | undefined;
    isSubtask?: boolean | undefined;
    hasAttachedUrl?: boolean | undefined;
    hasMailUrl?: boolean | undefined;
    priority?: "none" | "low" | "medium" | "high" | undefined;
    priorityMin?: number | undefined;
    priorityMax?: number | undefined;
    minPriority?: number | undefined;
    maxPriority?: number | undefined;
    sortBy?: "list" | "priority" | "title" | "dueDate" | "creationDate" | "lastModified" | undefined;
    sortOrder?: "asc" | "desc" | undefined;
    count?: number | undefined;
    maxResults?: number | undefined;
}>;
export declare class RemindersSearch implements INodeType {
    description: INodeTypeDescription;
    methods: {
        listSearch: {
            searchLists(this: ILoadOptionsFunctions, filter?: string): Promise<INodeListSearchResult>;
        };
    };
    execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]>;
}
